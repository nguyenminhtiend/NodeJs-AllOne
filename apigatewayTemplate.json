{
  "swagger": "2.0",
  "info": {
    "version": "2018-12-14T05:10:13Z",
    "title": "%API_TITLE%"
  },
  "host": "%HOST_NAME%",
  "schemes": [
    "https"
  ],
  "paths": {
    "/": {
      "get": {
        "operationId": "Index",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-production-api-index/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      }
    },
    "/actuary/configuration/pop-price-rate": {
      "get": {
        "operationId": "Get pop price",
        "responses": {},
        "security": [
          {
            "droplet-auth-integrated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-getPopPriceRate/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "options": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      }
    },
    "/actuary/configuration/pop-price-rate/{id}": {
      "delete": {
        "operationId": "Delete pop price",
        "responses": {},
        "security": [
          {
            "droplet-auth-integrated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-deletePopPriceRate/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "options": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,Id-Token,X-Api-Key,X-Amz-Security-Token,client-id'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/actuary/configuration/time-period": {
      "get": {
        "operationId": "Get Time Period",
        "responses": {},
        "security": [
          {
            "droplet-auth-integrated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-getTimePeriod/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "post": {
        "operationId": "Configure Time Period",
        "responses": {},
        "security": [
          {
            "droplet-auth-integrated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-configureTimePeriod/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "options": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,Id-Token,X-Api-Key,X-Amz-Security-Token,client-id'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/actuary/configuration/time-period/{id}": {
      "options": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,Id-Token,X-Api-Key,X-Amz-Security-Token,client-id'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/actuary/forecast": {
      "get": {
        "operationId": "Get Forecast",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-getForecast/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "options": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      }
    },
    "/actuary/historical": {
      "options": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      }
    },
    "/actuary/historical/rainfall": {
      "get": {
        "operationId": "Get Historical Rainfall",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-getHistoricalRainfall/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "options": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      }
    },
    "/actuary/pinfare/airline": {
      "get": {
        "operationId": "List pinfare airlines",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-pinfare-airline-list/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "post": {
        "operationId": "Add pinfare airline",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-pinfare-airline-add/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "options": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      }
    },
    "/actuary/pinfare/peaks": {
      "get": {
        "operationId": "Get pinfare peak periods",
        "responses": {},
        "security": [
          {
            "droplet-auth-integrated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-pinfare-peaks-get/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "post": {
        "operationId": "Add pinfare peak period",
        "responses": {},
        "security": [
          {
            "droplet-auth-integrated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-pinfare-peaks-add/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "options": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      }
    },
    "/actuary/pinfare/peaks/{id}": {
      "put": {
        "operationId": "Update pinfare peak period",
        "responses": {},
        "security": [
          {
            "droplet-auth-integrated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-pinfare-peaks-update/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "delete": {
        "operationId": "Update pinfare peak period",
        "responses": {},
        "security": [
          {
            "droplet-auth-integrated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-pinfare-peaks-delete/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "options": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      }
    },
    "/actuary/pinfare/pinnable": {
      "post": {
        "operationId": "Search pinfare pinnable",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-pinfare-pinnable-search/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "timeoutInMillis": 25000,
          "type": "aws_proxy"
        }
      },
      "options": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      }
    },
    "/actuary/pinfare/quotation": {
      "post": {
        "operationId": "Search pinfare quotation",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-pinfare-quotation-search/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "timeoutInMillis": 25000,
          "type": "aws_proxy"
        }
      },
      "options": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      }
    },
    "/actuary/pinfare/rates": {
      "get": {
        "operationId": "Get pinfare rate",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-pinfare-rate-get/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "post": {
        "operationId": "Set pinfare rate",
        "responses": {},
        "security": [
          {
            "droplet-auth-integrated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-pinfare-rate-set/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "options": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      }
    },
    "/actuary/pinfare/surcharge": {
      "get": {
        "operationId": "Get pinfare surcharge",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-pinfare-surcharge-get/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "post": {
        "operationId": "Set pinfare surcharge",
        "responses": {},
        "security": [
          {
            "droplet-auth-integrated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-pinfare-surcharge-set/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "options": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      }
    },
    "/actuary/pinfare/x-value": {
      "get": {
        "operationId": "List pinfare x-value",
        "responses": {},
        "security": [
          {
            "droplet-auth-integrated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-pinfare-xvalue-list/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "post": {
        "operationId": "Add pinfare x-value",
        "responses": {},
        "security": [
          {
            "droplet-auth-integrated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-pinfare-xvalue-add/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "options": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      }
    },
    "/actuary/pinfare/x-value/{id}": {
      "get": {
        "operationId": "Get pinfare x-value",
        "responses": {},
        "security": [
          {
            "droplet-auth-integrated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-pinfare-xvalue-get/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "options": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      }
    },
    "/actuary/pinfare/{id}": {
      "get": {
        "operationId": "Get pinfare airline",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-pinfare-airline-get/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "options": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      }
    },
    "/actuary/quotation": {
      "get": {
        "operationId": "Get Quotation",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-getQuotation/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "options": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      }
    },
    "/api/admins": {
      "get": {
        "operationId": "GETApiAdmins",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/admins",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "post": {
        "operationId": "POSTApiAdmins",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/admins",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiAdmins",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/admins",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/applications": {
      "get": {
        "operationId": "GETApiApplications",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/applications",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "post": {
        "operationId": "POSTApiApplications",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/applications",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiApplications",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/applications",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/applications/{id}": {
      "get": {
        "operationId": "GETApiApplicationsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/applications/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "cacheNamespace": "%CACHE_NAMESPACE_API_APPLICATION%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "put": {
        "operationId": "PUTApiApplicationsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/applications/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "cacheNamespace": "%CACHE_NAMESPACE_API_APPLICATION%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "delete": {
        "operationId": "DELETEApiApplicationsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/applications/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "DELETE",
          "cacheNamespace": "%CACHE_NAMESPACE_API_APPLICATION%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiApplicationsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/applications/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_APPLICATION%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/applications/{id}/emailTemplates/{key}": {
      "get": {
        "operationId": "GETApiApplicationsIdEmailTemplatesKey",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/applications/{id}/emailTemplates/{key}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.key": "method.request.path.key",
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "cacheNamespace": "%CACHE_NAMESPACE_API_APPLICATION_EMAILTEMPLATE%",
          "cacheKeyParameters": [
            "method.request.path.id",
            "method.request.path.key"
          ],
          "type": "http_proxy"
        }
      },
      "put": {
        "operationId": "PUTApiApplicationsIdEmailTemplatesKey",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/applications/{id}/emailTemplates/{key}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.key": "method.request.path.key",
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "cacheNamespace": "%CACHE_NAMESPACE_API_APPLICATION_EMAILTEMPLATE%",
          "cacheKeyParameters": [
            "method.request.path.id",
            "method.request.path.key"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiApplicationsIdEmailTemplatesKey",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/applications/{id}/emailTemplates/{key}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.key": "method.request.path.key",
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_APPLICATION_EMAILTEMPLATE%",
          "cacheKeyParameters": [
            "method.request.path.id",
            "method.request.path.key"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/applications/{id}/products": {
      "put": {
        "operationId": "PUTApiApplicationsIdProducts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/applications/{id}/products",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "cacheNamespace": "%CACHE_NAMESPACE_API_APPLICATION_PRODUCT%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiApplicationsIdProducts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/applications/{id}/products",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_APPLICATION_PRODUCT%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/audit-logs": {
      "get": {
        "operationId": "GETApiAuditlogs",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/audit-logs",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiAuditlogs",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/audit-logs",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/auth/new/password": {
      "post": {
        "operationId": "POSTApiAuthNewPassword",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/auth/new/password",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiAuthNewPassword",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/auth/new/password",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/auth/new/session": {
      "post": {
        "operationId": "POSTApiAuthNewSession",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/auth/new/session",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiAuthNewSession",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/auth/new/session",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/auth/resend/setNewPassword": {
      "post": {
        "operationId": "POSTApiAuthResendSetNewPassword",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/auth/resend/setNewPassword",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiAuthResendSetNewPassword",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/auth/resend/setNewPassword",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/auth/reset/code": {
      "post": {
        "operationId": "POSTApiAuthResetCode",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/auth/reset/code",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiAuthResetCode",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/auth/reset/code",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/auth/reset/password": {
      "post": {
        "operationId": "POSTApiAuthResetPassword",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/auth/reset/password",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiAuthResetPassword",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/auth/reset/password",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/auth/session": {
      "post": {
        "operationId": "POSTApiAuthSession",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/auth/session",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "delete": {
        "operationId": "DELETEApiAuthSession",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/auth/session",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "DELETE",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiAuthSession",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/auth/session",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/auth/token": {
      "post": {
        "operationId": "POSTApiAuthToken",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/auth/token",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiAuthToken",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/auth/token",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/campaigns": {
      "get": {
        "operationId": "GETApiCampaigns",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/campaigns",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "post": {
        "operationId": "POSTApiCampaigns",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/campaigns",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiCampaigns",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/campaigns",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/campaigns/config/types": {
      "get": {
        "operationId": "GETApiCampaignsConfigTypes",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/campaigns/config/types",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiCampaignsConfigTypes",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/campaigns/config/types",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/campaigns/{id}": {
      "put": {
        "operationId": "PUTApiCampaignsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/campaigns/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CAMPAIGN%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "delete": {
        "operationId": "DELETEApiCampaignsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/campaigns/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "DELETE",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CAMPAIGN%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiCampaignsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/campaigns/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CAMPAIGN%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/claimAttributes": {
      "get": {
        "operationId": "GETApiClaimAttributes",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claimAttributes",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "post": {
        "operationId": "POSTApiClaimAttributes",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claimAttributes",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiClaimAttributes",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claimAttributes",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/claimAttributes/config/types": {
      "get": {
        "operationId": "GETApiClaimAttributesConfigTypes",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claimAttributes/config/types",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiClaimAttributesConfigTypes",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claimAttributes/config/types",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/claimAttributes/{id}": {
      "put": {
        "operationId": "PUTApiClaimAttributesId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claimAttributes/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CLAIMATTRIBUTE%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "delete": {
        "operationId": "DELETEApiClaimAttributesId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claimAttributes/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "DELETE",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CLAIMATTRIBUTE%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiClaimAttributesId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claimAttributes/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CLAIMATTRIBUTE%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/claims": {
      "get": {
        "operationId": "GETApiClaims",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claims",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "post": {
        "operationId": "POSTApiClaims",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claims",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiClaims",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claims",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/claims/appeal": {
      "post": {
        "operationId": "POSTApiClaimsAppeal",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claims/appeal",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiClaimsAppeal",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claims/appeal",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/claims/approve/{id}": {
      "put": {
        "operationId": "PUTApiClaimsApproveId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claims/approve/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CLAIM_APPROVE%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiClaimsApproveId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claims/approve/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CLAIM_APPROVE%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/claims/invalidate/{id}": {
      "put": {
        "operationId": "PUTApiClaimsInvalidateId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claims/invalidate/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CLAIM_INVALIDATE%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiClaimsInvalidateId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claims/invalidate/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CLAIM_INVALIDATE%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/claims/payout-detail/{id}": {
      "get": {
        "operationId": "GETApiClaimsPayoutdetailId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claims/payout-detail/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CLAIM_PAYOUTDETAIL%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiClaimsPayoutdetailId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claims/payout-detail/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CLAIM_PAYOUTDETAIL%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/claims/payout-retry/{id}": {
      "post": {
        "operationId": "POSTApiClaimsPayoutretryId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claims/payout-retry/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CLAIM_PAYOUTRETRY%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiClaimsPayoutretryId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claims/payout-retry/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CLAIM_PAYOUTRETRY%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/claims/payout-status/{id}": {
      "get": {
        "operationId": "GETApiClaimsPayoutstatusId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claims/payout-status/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CLAIM_PAYOUTSTATUS%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiClaimsPayoutstatusId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claims/payout-status/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CLAIM_PAYOUTSTATUS%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/claims/payout/{id}": {
      "put": {
        "operationId": "PUTApiClaimsPayoutId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claims/payout/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CLAIM_PAYOUT%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiClaimsPayoutId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claims/payout/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CLAIM_PAYOUT%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/claims/rain-history/{id}": {
      "get": {
        "operationId": "GETApiClaimsRainhistoryId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claims/rain-history/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CLAIM_RAINHISTORY%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiClaimsRainhistoryId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claims/rain-history/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CLAIM_RAINHISTORY%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/claims/receipt/{key}": {
      "get": {
        "operationId": "GETApiClaimsReceiptKey",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claims/receipt/{key}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.key": "method.request.path.key"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CLAIM_RECEIPT%",
          "cacheKeyParameters": [
            "method.request.path.key"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiClaimsReceiptKey",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claims/receipt/{key}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.key": "method.request.path.key"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CLAIM_RECEIPT%",
          "cacheKeyParameters": [
            "method.request.path.key"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/claims/reject/{id}": {
      "put": {
        "operationId": "PUTApiClaimsRejectId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claims/reject/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CLAIM_REJECT%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiClaimsRejectId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claims/reject/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CLAIM_REJECT%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/claims/{id}": {
      "get": {
        "operationId": "GETApiClaimsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claims/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CLAIM%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiClaimsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/claims/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CLAIM%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/codes": {
      "get": {
        "operationId": "GETApiCodes",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/codes",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "post": {
        "operationId": "POSTApiCodes",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/codes",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiCodes",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/codes",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/codes/{code}": {
      "get": {
        "operationId": "GETApiCodesCode",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/codes/{code}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.code": "method.request.path.code"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CODE%",
          "cacheKeyParameters": [
            "method.request.path.code"
          ],
          "type": "http_proxy"
        }
      },
      "put": {
        "operationId": "PUTApiCodesCode",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/codes/{code}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.code": "method.request.path.code"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CODE%",
          "cacheKeyParameters": [
            "method.request.path.code"
          ],
          "type": "http_proxy"
        }
      },
      "delete": {
        "operationId": "DELETEApiCodesCode",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/codes/{code}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.code": "method.request.path.code"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "DELETE",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CODE%",
          "cacheKeyParameters": [
            "method.request.path.code"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiCodesCode",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/codes/{code}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.code": "method.request.path.code"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CODE%",
          "cacheKeyParameters": [
            "method.request.path.code"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/codes/{code}/availability": {
      "get": {
        "operationId": "GETApiCodesCodeAvailability",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/codes/{code}/availability",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.code": "method.request.path.code"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CODE_AVAILABILITY%",
          "cacheKeyParameters": [
            "method.request.path.code"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiCodesCodeAvailability",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/codes/{code}/availability",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.code": "method.request.path.code"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CODE_AVAILABILITY%",
          "cacheKeyParameters": [
            "method.request.path.code"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/codes/{code}/validity": {
      "get": {
        "operationId": "GETApiCodesCodeValidity",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/codes/{code}/validity",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.code": "method.request.path.code"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CODE_VALIDITY%",
          "cacheKeyParameters": [
            "method.request.path.code"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiCodesCodeValidity",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/codes/{code}/validity",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.code": "method.request.path.code"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CODE_VALIDITY%",
          "cacheKeyParameters": [
            "method.request.path.code"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/customers": {
      "get": {
        "operationId": "GETApiCustomers",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/customers",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiCustomers",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/customers",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/customers/{username}": {
      "get": {
        "operationId": "GETApiCustomersUsername",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/customers/{username}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.username": "method.request.path.username"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CUSTOMER%",
          "cacheKeyParameters": [
            "method.request.path.username"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiCustomersUsername",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/customers/{username}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.username": "method.request.path.username"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CUSTOMER%",
          "cacheKeyParameters": [
            "method.request.path.username"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/customers/{username}/attributes": {
      "put": {
        "operationId": "PUTApiCustomersUsernameAttributes",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/customers/{username}/attributes",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.username": "method.request.path.username"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CUSTOMER_ATTRIBUTE%",
          "cacheKeyParameters": [
            "method.request.path.username"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiCustomersUsernameAttributes",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/customers/{username}/attributes",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.username": "method.request.path.username"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_CUSTOMER_ATTRIBUTE%",
          "cacheKeyParameters": [
            "method.request.path.username"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/emailTemplates/config/keys": {
      "get": {
        "operationId": "GETApiEmailTemplatesConfigKeys",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/emailTemplates/config/keys",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiEmailTemplatesConfigKeys",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/emailTemplates/config/keys",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/histories/admin/{userId}": {
      "get": {
        "operationId": "GETApiHistoriesAdminUserId",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/histories/admin/{userId}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.userId": "method.request.path.userId"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "cacheNamespace": "%CACHE_NAMESPACE_API_HISTORY_ADMIN%",
          "cacheKeyParameters": [
            "method.request.path.userId"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiHistoriesAdminUserId",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/histories/admin/{userId}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.userId": "method.request.path.userId"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_HISTORY_ADMIN%",
          "cacheKeyParameters": [
            "method.request.path.userId"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/histories/customer": {
      "get": {
        "operationId": "GETApiHistoriesCustomer",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/histories/customer",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiHistoriesCustomer",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/histories/customer",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/me/codes": {
      "get": {
        "operationId": "GETApiMeCodes",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/me/codes",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiMeCodes",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/me/codes",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/me/referralCode": {
      "get": {
        "operationId": "GETApiMeReferralCode",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/me/referralCode",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiMeReferralCode",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/me/referralCode",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/me/validCodes": {
      "get": {
        "operationId": "GETApiMeValidCodes",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/me/validCodes",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiMeValidCodes",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/me/validCodes",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/payment/cards": {
      "get": {
        "operationId": "GETApiPaymentCards",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/payment/cards",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "post": {
        "operationId": "POSTApiPaymentCards",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/payment/cards",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiPaymentCards",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/payment/cards",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/payment/cards/{id}": {
      "delete": {
        "operationId": "DELETEApiPaymentCardsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/payment/cards/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "DELETE",
          "cacheNamespace": "%CACHE_NAMESPACE_API_PAYMENT_CARD%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiPaymentCardsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/payment/cards/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_PAYMENT_CARD%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/payment/pay2ds": {
      "post": {
        "operationId": "POSTApiPaymentPay2ds",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/payment/pay2ds",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiPaymentPay2ds",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/payment/pay2ds",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/payment/pay3ds": {
      "post": {
        "operationId": "POSTApiPaymentPay3ds",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/payment/pay3ds",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiPaymentPay3ds",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/payment/pay3ds",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/payment/transaction": {
      "get": {
        "operationId": "GETApiPaymentTransaction",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/payment/transaction",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiPaymentTransaction",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/payment/transaction",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/payment/transaction/{id}": {
      "get": {
        "operationId": "GETApiPaymentTransactionId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/payment/transaction/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "cacheNamespace": "%CACHE_NAMESPACE_API_PAYMENT_TRANSACTION%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiPaymentTransactionId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/payment/transaction/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_PAYMENT_TRANSACTION%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/payment/webhooks/stripe": {
      "post": {
        "operationId": "POSTApiPaymentWebhooksStripe",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/payment/webhooks/stripe",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiPaymentWebhooksStripe",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/payment/webhooks/stripe",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/policies": {
      "get": {
        "operationId": "GETApiPolicies",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/policies",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiPolicies",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/policies",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/policies/certificate/{policyNumber}": {
      "get": {
        "operationId": "GETApiPoliciesCertificatePolicyNumber",
        "parameters": [
          {
            "name": "policyNumber",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/policies/certificate/{policyNumber}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.policyNumber": "method.request.path.policyNumber"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "cacheNamespace": "%CACHE_NAMESPACE_API_POLICY_CERTIFICATE%",
          "cacheKeyParameters": [
            "method.request.path.policyNumber"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiPoliciesCertificatePolicyNumber",
        "parameters": [
          {
            "name": "policyNumber",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/policies/certificate/{policyNumber}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.policyNumber": "method.request.path.policyNumber"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_POLICY_CERTIFICATE%",
          "cacheKeyParameters": [
            "method.request.path.policyNumber"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/policies/get-price": {
      "post": {
        "operationId": "POSTApiPoliciesGetprice",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/policies/get-price",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiPoliciesGetprice",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/policies/get-price",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/policies/product": {
      "post": {
        "operationId": "POSTApiPoliciesProduct",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/policies/product",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiPoliciesProduct",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/policies/product",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/policies/tax-invoice/{policyNumber}": {
      "get": {
        "operationId": "GETApiPoliciesTaxinvoicePolicyNumber",
        "parameters": [
          {
            "name": "policyNumber",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/policies/tax-invoice/{policyNumber}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.policyNumber": "method.request.path.policyNumber"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "cacheNamespace": "%CACHE_NAMESPACE_API_POLICY_TAXINVOICE%",
          "cacheKeyParameters": [
            "method.request.path.policyNumber"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiPoliciesTaxinvoicePolicyNumber",
        "parameters": [
          {
            "name": "policyNumber",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/policies/tax-invoice/{policyNumber}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.policyNumber": "method.request.path.policyNumber"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_POLICY_TAXINVOICE%",
          "cacheKeyParameters": [
            "method.request.path.policyNumber"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/policies/validate": {
      "post": {
        "operationId": "POSTApiPoliciesValidate",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/policies/validate",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiPoliciesValidate",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/policies/validate",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/policies/{id}": {
      "get": {
        "operationId": "GETApiPoliciesId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/policies/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "cacheNamespace": "%CACHE_NAMESPACE_API_POLICY%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiPoliciesId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/policies/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_POLICY%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/policies/{id}/transaction": {
      "get": {
        "operationId": "GETApiPoliciesIdTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/policies/{id}/transaction",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "cacheNamespace": "%CACHE_NAMESPACE_API_POLICY_TRANSACTION%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiPoliciesIdTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/policies/{id}/transaction",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_POLICY_TRANSACTION%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/policyAttributes": {
      "get": {
        "operationId": "GETApiPolicyAttributes",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/policyAttributes",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "post": {
        "operationId": "POSTApiPolicyAttributes",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/policyAttributes",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiPolicyAttributes",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/policyAttributes",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/policyAttributes/config/types": {
      "get": {
        "operationId": "GETApiPolicyAttributesConfigTypes",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/policyAttributes/config/types",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiPolicyAttributesConfigTypes",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/policyAttributes/config/types",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/policyAttributes/{id}": {
      "put": {
        "operationId": "PUTApiPolicyAttributesId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/policyAttributes/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "cacheNamespace": "%CACHE_NAMESPACE_API_POLICYATTRIBUTE%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "delete": {
        "operationId": "DELETEApiPolicyAttributesId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/policyAttributes/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "DELETE",
          "cacheNamespace": "%CACHE_NAMESPACE_API_POLICYATTRIBUTE%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiPolicyAttributesId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/policyAttributes/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_POLICYATTRIBUTE%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/products": {
      "get": {
        "operationId": "GETApiProducts",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/products",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "post": {
        "operationId": "POSTApiProducts",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/products",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiProducts",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/products",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/products/{id}": {
      "get": {
        "operationId": "GETApiProductsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/products/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "cacheNamespace": "%CACHE_NAMESPACE_API_PRODUCT%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "put": {
        "operationId": "PUTApiProductsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/products/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "cacheNamespace": "%CACHE_NAMESPACE_API_PRODUCT%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "delete": {
        "operationId": "DELETEApiProductsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/products/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "DELETE",
          "cacheNamespace": "%CACHE_NAMESPACE_API_PRODUCT%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiProductsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/products/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_PRODUCT%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/products/{id}/applications": {
      "put": {
        "operationId": "PUTApiProductsIdApplications",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/products/{id}/applications",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "cacheNamespace": "%CACHE_NAMESPACE_API_PRODUCT_APPLICATION%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiProductsIdApplications",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/products/{id}/applications",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_PRODUCT_APPLICATION%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/quotationFormulas": {
      "post": {
        "operationId": "POSTApiQuotationFormulas",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/quotationFormulas",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiQuotationFormulas",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/quotationFormulas",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/quotationFormulas/{id}": {
      "put": {
        "operationId": "PUTApiQuotationFormulasId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/quotationFormulas/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "cacheNamespace": "%CACHE_NAMESPACE_API_QUOTATIONFORMULA%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "delete": {
        "operationId": "DELETEApiQuotationFormulasId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/quotationFormulas/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "DELETE",
          "cacheNamespace": "%CACHE_NAMESPACE_API_QUOTATIONFORMULA%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiQuotationFormulasId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/quotationFormulas/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_QUOTATIONFORMULA%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/quotations": {
      "get": {
        "operationId": "GETApiQuotations",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/quotations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiQuotations",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/quotations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/quotations/pull-price": {
      "get": {
        "operationId": "GETApiQuotationsPullprice",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/quotations/pull-price",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiQuotationsPullprice",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/quotations/pull-price",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/rewards": {
      "get": {
        "operationId": "GETApiRewards",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/rewards",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "post": {
        "operationId": "POSTApiRewards",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/rewards",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiRewards",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/rewards",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/rewards/config/types": {
      "get": {
        "operationId": "GETApiRewardsConfigTypes",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/rewards/config/types",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiRewardsConfigTypes",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/rewards/config/types",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/rewards/{id}": {
      "put": {
        "operationId": "PUTApiRewardsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/rewards/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "cacheNamespace": "%CACHE_NAMESPACE_API_REWARD%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "delete": {
        "operationId": "DELETEApiRewardsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/rewards/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "DELETE",
          "cacheNamespace": "%CACHE_NAMESPACE_API_REWARD%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiRewardsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/rewards/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_REWARD%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/settings/kv": {
      "get": {
        "operationId": "GETApiSettingsKv",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/settings/kv",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiSettingsKv",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/settings/kv",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/settings/kv/policy-pricing": {
      "get": {
        "operationId": "GETApiSettingsKvPolicypricing",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/settings/kv/policy-pricing",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiSettingsKvPolicypricing",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/settings/kv/policy-pricing",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/settings/kv/{id}": {
      "get": {
        "operationId": "GETApiSettingsKvId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/settings/kv/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "cacheNamespace": "%CACHE_NAMESPACE_API_SETTING_KV%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "put": {
        "operationId": "PUTApiSettingsKvId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/settings/kv/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "cacheNamespace": "%CACHE_NAMESPACE_API_SETTING_KV%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiSettingsKvId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/settings/kv/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_SETTING_KV%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/settings/payout": {
      "get": {
        "operationId": "GETApiSettingsPayout",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/settings/payout",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "post": {
        "operationId": "POSTApiSettingsPayout",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/settings/payout",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiSettingsPayout",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/settings/payout",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/settings/payout/{id}": {
      "put": {
        "operationId": "PUTApiSettingsPayoutId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/settings/payout/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "cacheNamespace": "%CACHE_NAMESPACE_API_SETTING_PAYOUT%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "delete": {
        "operationId": "DELETEApiSettingsPayoutId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/settings/payout/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "DELETE",
          "cacheNamespace": "%CACHE_NAMESPACE_API_SETTING_PAYOUT%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiSettingsPayoutId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/settings/payout/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_SETTING_PAYOUT%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/settings/quotations": {
      "get": {
        "operationId": "GETApiSettingsQuotations",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/settings/quotations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "post": {
        "operationId": "POSTApiSettingsQuotations",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/settings/quotations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiSettingsQuotations",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/settings/quotations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/settings/quotations/{id}": {
      "put": {
        "operationId": "PUTApiSettingsQuotationsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/settings/quotations/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "cacheNamespace": "%CACHE_NAMESPACE_API_SETTING_QUOTATION%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "delete": {
        "operationId": "DELETEApiSettingsQuotationsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/settings/quotations/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "DELETE",
          "cacheNamespace": "%CACHE_NAMESPACE_API_SETTING_QUOTATION%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiSettingsQuotationsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/settings/quotations/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_SETTING_QUOTATION%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/transaction-histories": {
      "get": {
        "operationId": "GETApiTransactionhistories",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/transaction-histories",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiTransactionhistories",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/transaction-histories",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/transaction-histories/{id}": {
      "get": {
        "operationId": "GETApiTransactionhistoriesId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/transaction-histories/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "cacheNamespace": "%CACHE_NAMESPACE_API_TRANSACTIONHISTORY%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiTransactionhistoriesId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/transaction-histories/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_TRANSACTIONHISTORY%",
          "cacheKeyParameters": [
            "method.request.path.id"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/usages": {
      "get": {
        "operationId": "GETApiUsages",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/usages",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "put": {
        "operationId": "PUTApiUsages",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/usages",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiUsages",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/usages",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/usages/config/status": {
      "get": {
        "operationId": "GETApiUsagesConfigStatus",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/usages/config/status",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiUsagesConfigStatus",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/usages/config/status",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/users": {
      "post": {
        "operationId": "POSTApiUsers",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/users",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiUsers",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/users",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/users/existing": {
      "get": {
        "operationId": "GETApiUsersExisting",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/users/existing",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiUsersExisting",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/users/existing",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/users/me": {
      "get": {
        "operationId": "GETApiUsersMe",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/users/me",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiUsersMe",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/users/me",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/users/me/attributes": {
      "put": {
        "operationId": "PUTApiUsersMeAttributes",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/users/me/attributes",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiUsersMeAttributes",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/users/me/attributes",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/users/me/password": {
      "put": {
        "operationId": "PUTApiUsersMePassword",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/users/me/password",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiUsersMePassword",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/users/me/password",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/users/me/verfication/email": {
      "post": {
        "operationId": "POSTApiUsersMeVerficationEmail",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/users/me/verfication/email",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiUsersMeVerficationEmail",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/users/me/verfication/email",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "type": "http_proxy"
        }
      }
    },
    "/api/users/{username}": {
      "get": {
        "operationId": "GETApiUsersUsername",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/users/{username}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.username": "method.request.path.username"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "cacheNamespace": "%CACHE_NAMESPACE_API_USER%",
          "cacheKeyParameters": [
            "method.request.path.username"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiUsersUsername",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/users/{username}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.username": "method.request.path.username"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_USER%",
          "cacheKeyParameters": [
            "method.request.path.username"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/users/{username}/disable": {
      "put": {
        "operationId": "PUTApiUsersUsernameDisable",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/users/{username}/disable",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.username": "method.request.path.username"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "cacheNamespace": "%CACHE_NAMESPACE_API_USER_DISABLE%",
          "cacheKeyParameters": [
            "method.request.path.username"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiUsersUsernameDisable",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/users/{username}/disable",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.username": "method.request.path.username"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_USER_DISABLE%",
          "cacheKeyParameters": [
            "method.request.path.username"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/users/{username}/enable": {
      "put": {
        "operationId": "PUTApiUsersUsernameEnable",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/users/{username}/enable",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.username": "method.request.path.username"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "cacheNamespace": "%CACHE_NAMESPACE_API_USER_ENABLE%",
          "cacheKeyParameters": [
            "method.request.path.username"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiUsersUsernameEnable",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/users/{username}/enable",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.username": "method.request.path.username"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_USER_ENABLE%",
          "cacheKeyParameters": [
            "method.request.path.username"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/api/users/{username}/groups": {
      "post": {
        "operationId": "POSTApiUsersUsernameGroups",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/users/{username}/groups",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.username": "method.request.path.username"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "cacheNamespace": "%CACHE_NAMESPACE_API_USER_GROUP%",
          "cacheKeyParameters": [
            "method.request.path.username"
          ],
          "type": "http_proxy"
        }
      },
      "delete": {
        "operationId": "DELETEApiUsersUsernameGroups",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/users/{username}/groups",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.username": "method.request.path.username"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "DELETE",
          "cacheNamespace": "%CACHE_NAMESPACE_API_USER_GROUP%",
          "cacheKeyParameters": [
            "method.request.path.username"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSApiUsersUsernameGroups",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3000/api/users/{username}/groups",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.username": "method.request.path.username"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_API_USER_GROUP%",
          "cacheKeyParameters": [
            "method.request.path.username"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/application": {
      "get": {
        "operationId": "GETApplication",
        "responses": {},
        "security": [
          {
            "droplet-auth-integrated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3002/application",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      }
    },
    "/application/{proxy+}": {
      "options": {
        "operationId": "OPTIONSApplicationProxy",
        "parameters": [
          {
            "name": "proxy",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3002/application/{proxy}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.proxy": "method.request.path.proxy"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_APPLICATION%",
          "cacheKeyParameters": [
            "method.request.path.proxy"
          ],
          "type": "http_proxy"
        }
      },
      "x-amazon-apigateway-any-method": {
        "operationId": "ANYApplicationProxy",
        "parameters": [
          {
            "name": "proxy",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-integrated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3002/application/{proxy}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.proxy": "method.request.path.proxy"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "ANY",
          "cacheNamespace": "%CACHE_NAMESPACE_APPLICATION%",
          "cacheKeyParameters": [
            "method.request.path.proxy"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/authentication": {
      "get": {
        "operationId": "GETAuthentication",
        "responses": {},
        "security": [
          {
            "droplet-auth-integrated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3001/authentication",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      }
    },
    "/authentication/auth/{proxy+}": {
      "post": {
        "operationId": "POSTAuthenticationAuthProxy",
        "parameters": [
          {
            "name": "proxy",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3001/authentication/auth/{proxy}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.proxy": "method.request.path.proxy"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "cacheNamespace": "%CACHE_NAMESPACE_APPLICATION_AUTH%",
          "cacheKeyParameters": [
            "method.request.path.proxy"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/authentication/users": {
      "post": {
        "operationId": "POSTAuthenticationUsers",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3001/authentication/users",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      }
    },
    "/authentication/users/existing": {
      "get": {
        "operationId": "GETAuthenticationUsersExisting",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3001/authentication/users/existing",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      }
    },
    "/authentication/{proxy+}": {
      "options": {
        "operationId": "OPTIONSAuthenticationProxy",
        "parameters": [
          {
            "name": "proxy",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3001/authentication/{proxy}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.proxy": "method.request.path.proxy"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_AUTHENTICATION%",
          "cacheKeyParameters": [
            "method.request.path.proxy"
          ],
          "type": "http_proxy"
        }
      },
      "x-amazon-apigateway-any-method": {
        "operationId": "ANYAuthenticationProxy",
        "parameters": [
          {
            "name": "proxy",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-integrated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3001/authentication/{proxy}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.proxy": "method.request.path.proxy"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "ANY",
          "cacheNamespace": "%CACHE_NAMESPACE_AUTHENTICATION%",
          "cacheKeyParameters": [
            "method.request.path.proxy"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/gl": {
      "get": {
        "operationId": "GETGl",
        "responses": {},
        "security": [
          {
            "droplet-auth-integrated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3005/gl",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSGl",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,Id-Token,X-Api-Key,X-Amz-Security-Token,Id-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/gl/sqs": {
      "post": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "security": [
          {
            "droplet-auth-integrated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "%EXECUTION_ROLE%",
          "uri": "arn:aws:apigateway:ap-southeast-1:sqs:action/SendMessage",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.querystring.MessageBody": "method.request.body",
            "integration.request.querystring.QueueUrl": "'https://sqs.ap-southeast-1.amazonaws.com/366368061009/droplet-gl'"
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws"
        }
      }
    },
    "/gl/{proxy+}": {
      "options": {
        "operationId": "OPTIONSGlProxy",
        "parameters": [
          {
            "name": "proxy",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3005/gl/{proxy}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.proxy": "method.request.path.proxy"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_GL%",
          "cacheKeyParameters": [
            "method.request.path.proxy"
          ],
          "type": "http_proxy"
        }
      },
      "x-amazon-apigateway-any-method": {
        "operationId": "ANYGlProxy",
        "parameters": [
          {
            "name": "proxy",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-integrated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3005/gl/{proxy}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.proxy": "method.request.path.proxy"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "ANY",
          "cacheNamespace": "%CACHE_NAMESPACE_GL%",
          "cacheKeyParameters": [
            "method.request.path.proxy"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/global/email": {
      "post": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-sending-email/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      },
      "options": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/pinfare": {
      "get": {
        "operationId": "GETPinfare",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/admins": {
      "get": {
        "operationId": "GETPinfareAdmins",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/admins",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "post": {
        "operationId": "POSTPinfareAdmins",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/admins",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/admins/{username}": {
      "get": {
        "operationId": "GETPinfareAdminsItem",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/admins/{username}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.username": "method.request.path.username"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/auth/accessToken/validation": {
      "post": {
        "operationId": "POSTPinfareAuthAccessTokenValidation",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/auth/accessToken/validation",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/auth/new/password": {
      "post": {
        "operationId": "POSTPinfareAuthNewPassword",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/auth/new/password",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/auth/new/session": {
      "post": {
        "operationId": "POSTPinfareAuthNewSession",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/auth/new/session",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/auth/resend/setNewPassword": {
      "post": {
        "operationId": "POSTPinfareAuthResendSetNewPassword",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/auth/resend/setNewPassword",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/auth/reset/code": {
      "post": {
        "operationId": "POSTPinfareAuthResetCode",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/auth/reset/code",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/auth/reset/password": {
      "post": {
        "operationId": "POSTPinfareAuthResetPassword",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/auth/reset/password",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/auth/session": {
      "post": {
        "operationId": "POSTPinfareAuthSession",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/auth/session",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "delete": {
        "operationId": "DELETEPinfareAuthSession",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/auth/session",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "DELETE",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/auth/token": {
      "post": {
        "operationId": "POSTPinfareAuthToken",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/auth/token",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/campaigns": {
      "get": {
        "operationId": "GETPinfareCampaigns",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/campaigns",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "post": {
        "operationId": "POSTPinfareCampaigns",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/campaigns",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/campaigns/config/types": {
      "get": {
        "operationId": "GETPinfareCampaignsConfigTypes",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/campaigns/config/types",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/campaigns/{id}": {
      "get": {
        "operationId": "GETPinfareCampaignsItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/campaigns/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "put": {
        "operationId": "PUTPinfareCampaignsItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/campaigns/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "type": "http_proxy"
        }
      },
      "delete": {
        "operationId": "DELETEPinfareCampaignsItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/campaigns/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "DELETE",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/claim": {
      "get": {
        "operationId": "GETPinfareClaim",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/claim",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "post": {
        "operationId": "POSTPinfareClaim",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/claim",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/claim/document": {
      "post": {
        "operationId": "POSTPinfareClaimDocument",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/claim/document",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/claim/payout/retry/{id}": {
      "post": {
        "operationId": "POSTPinfareClaimPayoutRetryItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/claim/payout/retry/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/claim/payout/status/{id}": {
      "get": {
        "operationId": "GETPinfareClaimPayoutStatusItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/claim/payout/status/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/claim/payout/{id}": {
      "put": {
        "operationId": "PUTPinfareClaimPayoutItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/claim/payout/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/claim/{id}": {
      "get": {
        "operationId": "GETPinfareClaimItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/claim/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "put": {
        "operationId": "PUTPinfareClaimItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/claim/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/codes": {
      "get": {
        "operationId": "GETPinfareCodes",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/codes",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "post": {
        "operationId": "POSTPinfareCodes",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/codes",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/codes/{code}": {
      "get": {
        "operationId": "GETPinfareCodesItem",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/codes/{code}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.code": "method.request.path.code"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "put": {
        "operationId": "PUTPinfareCodesItem",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/codes/{code}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.code": "method.request.path.code"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "type": "http_proxy"
        }
      },
      "delete": {
        "operationId": "DELETEPinfareCodesItem",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/codes/{code}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.code": "method.request.path.code"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "DELETE",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/codes/{code}/availability": {
      "get": {
        "operationId": "GETPinfareCodesItemAvailability",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/codes/{code}/availability",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.code": "method.request.path.code"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/codes/{code}/validity": {
      "get": {
        "operationId": "GETPinfareCodesItemValidity",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/codes/{code}/validity",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.code": "method.request.path.code"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/customers": {
      "get": {
        "operationId": "GETPinfareCustomers",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/customers",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/customers/{username}": {
      "get": {
        "operationId": "GETPinfareCustomersItem",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/customers/{username}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.username": "method.request.path.username"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/customers/{username}/attributes": {
      "put": {
        "operationId": "PUTPinfareCustomersItemAttributes",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/customers/{username}/attributes",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.username": "method.request.path.username"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/emailTemplates/config/keys": {
      "get": {
        "operationId": "GETPinfareEmailTemplatesConfigKeys",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/emailTemplates/config/keys",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/flight/autosuggest": {
      "get": {
        "operationId": "GETPinfareFlightAutosuggest",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/flight/autosuggest",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/flight/createsession": {
      "post": {
        "operationId": "POSTPinfareFlightCreatesession",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/flight/createsession",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/flight/itinerary/{id}/price/history": {
      "get": {
        "operationId": "GETPinfareFlightItineraryItemPriceHistory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/flight/itinerary/{id}/price/history",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/flight/itinerary/{id}/price/live": {
      "get": {
        "operationId": "GETPinfareFlightItineraryItemPriceLive",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/flight/itinerary/{id}/price/live",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/flight/pollsession": {
      "post": {
        "operationId": "POSTPinfareFlightPollsession",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/flight/pollsession",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/payment/cards": {
      "get": {
        "operationId": "GETPinfarePaymentCards",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/payment/cards",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "post": {
        "operationId": "POSTPinfarePaymentCards",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/payment/cards",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/payment/cards/{id}": {
      "delete": {
        "operationId": "DELETEPinfarePaymentCardsItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/payment/cards/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "DELETE",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/payment/transaction": {
      "get": {
        "operationId": "GETPinfarePaymentTransaction",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/payment/transaction",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/payment/transaction/{id}": {
      "get": {
        "operationId": "GETPinfarePaymentTransactionItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/payment/transaction/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/payment/webhooks/stripe": {
      "post": {
        "operationId": "POSTPinfarePaymentWebhooksStripe",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/payment/webhooks/stripe",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/pin": {
      "post": {
        "operationId": "POSTPinfarePin",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/pin",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "delete": {
        "operationId": "DELETEPinfarePin",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/pin",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "DELETE",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/policy": {
      "get": {
        "operationId": "GETPinfarePolicy",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/policy",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "post": {
        "operationId": "POSTPinfarePolicy",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/policy",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/policy/certificate/{policyNumber}": {
      "get": {
        "operationId": "GETPinfarePolicyCertificateItem",
        "parameters": [
          {
            "name": "policyNumber",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/policy/certificate/{policyNumber}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.policyNumber": "method.request.path.policyNumber"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/policy/tax-invoice/{policyNumber}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "policyNumber",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/policy/tax-invoice/{policyNumber}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.policyNumber": "method.request.path.policyNumber"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "policyNumber",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/policy/{transactionId}/transaction": {
      "get": {
        "operationId": "GETPinfarePolicyItemTransaction",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/policy/{transactionId}/transaction",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.transactionId": "method.request.path.transactionId"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/rewards": {
      "get": {
        "operationId": "GETPinfareRewards",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/rewards",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "post": {
        "operationId": "POSTPinfareRewards",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/rewards",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/rewards/config/types": {
      "get": {
        "operationId": "GETPinfareRewardsConfigTypes",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/rewards/config/types",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/rewards/{id}": {
      "put": {
        "operationId": "PUTPinfareRewardsItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/rewards/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "type": "http_proxy"
        }
      },
      "delete": {
        "operationId": "DELETEPinfareRewardsItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/rewards/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "DELETE",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/transaction-histories": {
      "get": {
        "operationId": "GETPinfareTransactionhistories",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/transaction-histories",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/transaction-histories/{id}": {
      "get": {
        "operationId": "GETPinfareTransactionhistoriesItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/transaction-histories/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/usages": {
      "get": {
        "operationId": "GETPinfareUsages",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/usages",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/usages/config/status": {
      "get": {
        "operationId": "GETPinfareUsagesConfigStatus",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/usages/config/status",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/usages/redeem": {
      "put": {
        "operationId": "PUTPinfareUsagesRedeem",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/usages/redeem",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/usages/release": {
      "put": {
        "operationId": "PUTPinfareUsagesRelease",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/usages/release",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/usages/reserve": {
      "put": {
        "operationId": "PUTPinfareUsagesReserve",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/usages/reserve",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/usages/{id}": {
      "put": {
        "operationId": "PUTPinfareUsagesItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/usages/{id}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/users": {
      "post": {
        "operationId": "POSTPinfareUsers",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/users",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/users/existing": {
      "get": {
        "operationId": "GETPinfareUsersExisting",
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/users/existing",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/users/me": {
      "get": {
        "operationId": "GETPinfareUsersMe",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/users/me",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/users/me/attributes": {
      "put": {
        "operationId": "PUTPinfareUsersMeAttributes",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/users/me/attributes",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/users/me/password": {
      "put": {
        "operationId": "PUTPinfareUsersMePassword",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/users/me/password",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "PUT",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/users/me/verification/email": {
      "post": {
        "operationId": "POSTPinfareUsersMeVerificationEmail",
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/users/me/verification/email",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "POST",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/pinfare/users/me/{username}": {
      "get": {
        "operationId": "GETPinfareUsersMeItem",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authenticated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:51077/pinfare/users/me/{username}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.username": "method.request.path.username"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "%LAMBDA_PATH%:function:droplet-api-cors/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws_proxy"
        }
      }
    },
    "/policy": {
      "get": {
        "operationId": "GETPolicy",
        "responses": {},
        "security": [
          {
            "droplet-auth-integrated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3003/policy",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      }
    },
    "/policy/{proxy+}": {
      "options": {
        "operationId": "OPTIONSPolicyProxy",
        "parameters": [
          {
            "name": "proxy",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3003/policy/{proxy}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.proxy": "method.request.path.proxy"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_POLICY%",
          "cacheKeyParameters": [
            "method.request.path.proxy"
          ],
          "type": "http_proxy"
        }
      },
      "x-amazon-apigateway-any-method": {
        "operationId": "ANYPolicyProxy",
        "parameters": [
          {
            "name": "proxy",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-integrated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3003/policy/{proxy}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.proxy": "method.request.path.proxy"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "ANY",
          "cacheNamespace": "%CACHE_NAMESPACE_POLICY%",
          "cacheKeyParameters": [
            "method.request.path.proxy"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/promotions": {
      "get": {
        "operationId": "GETPromotions",
        "responses": {},
        "security": [
          {
            "droplet-auth-integrated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3004/promotions",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "GET",
          "type": "http_proxy"
        }
      }
    },
    "/promotions/{proxy+}": {
      "options": {
        "operationId": "OPTIONSPromotionsProxy",
        "parameters": [
          {
            "name": "proxy",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3004/promotions/{proxy}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.proxy": "method.request.path.proxy"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_PROMOTION%",
          "cacheKeyParameters": [
            "method.request.path.proxy"
          ],
          "type": "http_proxy"
        }
      },
      "x-amazon-apigateway-any-method": {
        "operationId": "ANYPromotionsProxy",
        "parameters": [
          {
            "name": "proxy",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-integrated": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3004/promotions/{proxy}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.proxy": "method.request.path.proxy"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "ANY",
          "cacheNamespace": "%CACHE_NAMESPACE_PROMOTION%",
          "cacheKeyParameters": [
            "method.request.path.proxy"
          ],
          "type": "http_proxy"
        }
      }
    },
    "/v2/authentication/users/{username}/permissions": {
      "get": {
        "operationId": "GETV2AuthenticationUsersUsernamePermissions",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "droplet-auth-authentication": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3001/authentication/users/{username}/permissions",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.username": "method.request.path.username"
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "cacheNamespace": "%CACHE_NAMESPACE_V2_AUTHENTICATION_USER_PERMISSION%",
          "cacheKeyParameters": [
            "method.request.path.username"
          ],
          "type": "http_proxy"
        }
      },
      "options": {
        "operationId": "OPTIONSV2AuthenticationUsersUsernamePermissions",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "%VPC_LINK_URI%:3001/authentication/users/{username}/permissions",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestParameters": {
            "integration.request.path.username": "method.request.path.username"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "%VPC_LINK_ID%",
          "httpMethod": "OPTIONS",
          "cacheNamespace": "%CACHE_NAMESPACE_V2_AUTHENTICATION_USER_PERMISSION%",
          "cacheKeyParameters": [
            "method.request.path.username"
          ],
          "type": "http_proxy"
        }
      }
    }
  },
  "securityDefinitions": {
    "droplet-auth-integrated": {
      "type": "apiKey",
      "name": "Unused",
      "in": "header",
      "x-amazon-apigateway-authtype": "custom",
      "x-amazon-apigateway-authorizer": {
        "authorizerUri": "%LAMBDA_PATH%:function:droplet-auth-integrated/invocations",
        "authorizerResultTtlInSeconds": 0,
        "identitySource": "context.identity.sourceIp",
        "type": "request"
      }
    },
    "droplet-auth-authenticated": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "x-amazon-apigateway-authtype": "custom",
      "x-amazon-apigateway-authorizer": {
        "authorizerUri": "%LAMBDA_PATH%:function:droplet-auth-authenticated/invocations",
        "authorizerResultTtlInSeconds": 300,
        "identityValidationExpression": "^Bearer .*$",
        "type": "token"
      }
    },
    "droplet-auth-authentication": {
      "type": "apiKey",
      "name": "Unused",
      "in": "header",
      "x-amazon-apigateway-authtype": "custom",
      "x-amazon-apigateway-authorizer": {
        "authorizerUri": "%LAMBDA_PATH%:function:droplet-auth-authentication/invocations",
        "authorizerResultTtlInSeconds": 300,
        "identitySource": "context.identity.sourceIp",
        "type": "request"
      }
    }
  },
  "definitions": {
    "Empty": {
      "type": "object",
      "title": "Empty Schema"
    }
  },
  "x-amazon-apigateway-binary-media-types": [
    "multipart/form-data"
  ]
}